[{"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\index.js":"1","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\App.js":"2","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\layout\\BaseLayout.js":"3","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Analytics.js":"4","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\reducers\\index.js":"5","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\BlockchainTxns.js":"6","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\reducers\\walletReducer.js":"7","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Header.js":"8","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\HeaderERC20.js":"9","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\WalletAddressForm.js":"10","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\helpers.js":"11","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\actions\\walletActions.js":"12","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\actions\\types.js":"13","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Transactions.js":"14"},{"size":1791,"mtime":1631031183663,"results":"15","hashOfConfig":"16"},{"size":188,"mtime":1631031183660,"results":"17","hashOfConfig":"16"},{"size":1188,"mtime":1626096989890,"results":"18","hashOfConfig":"16"},{"size":1000,"mtime":1631031183661,"results":"19","hashOfConfig":"16"},{"size":176,"mtime":1625356241000,"results":"20","hashOfConfig":"16"},{"size":10150,"mtime":1631031183661,"results":"21","hashOfConfig":"16"},{"size":2041,"mtime":1630586236000,"results":"22","hashOfConfig":"16"},{"size":694,"mtime":1625852594107,"results":"23","hashOfConfig":"16"},{"size":773,"mtime":1625858147183,"results":"24","hashOfConfig":"16"},{"size":1902,"mtime":1630455947000,"results":"25","hashOfConfig":"16"},{"size":1382,"mtime":1630725372000,"results":"26","hashOfConfig":"16"},{"size":618,"mtime":1626096670690,"results":"27","hashOfConfig":"16"},{"size":144,"mtime":1625366236000,"results":"28","hashOfConfig":"16"},{"size":1357,"mtime":1631031183662,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i5qnff",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\index.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\App.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\layout\\BaseLayout.js",[],["62","63"],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Analytics.js",["64","65","66","67"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../App.css';\r\n// import {convertedDate} from './helpers';\r\n// import {convertedValue} from './helpers';\r\n\r\n\r\nconst Analytics = () => {\r\n    //global state variable\r\n    const address = useSelector(state => state.wallet.address);\r\n    const lastAddress = useSelector(state => state.wallet.lastAddress);\r\n    const walletData = useSelector(state => state.wallet.walletData);\r\n\r\n    //local state\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [showERC20, setshowERC20] = useState(false);\r\n\r\n    //receive dispatch function \r\n    const dispatch = useDispatch();\r\n\r\n    //componentDidMount (executes once) without dependency array }, []);\r\n    useEffect(() => {\r\n\r\n    //*componentDidUnmount - clean up function\r\n    //   return () => {\r\n    //     effect\r\n    //   };\r\n    }, []);\r\n\r\n  return <>\r\n\r\n    <h1>Analytics Page</h1>\r\n    \r\n  </>;\r\n};\r\n\r\nexport default Analytics;","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\reducers\\index.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\BlockchainTxns.js",["68","69","70"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../App.css';\r\nimport { submit } from '../actions/walletActions';\r\nimport { remove } from '../actions/walletActions';\r\nimport Header from './Header';\r\nimport HeaderERC20 from './HeaderERC20';\r\nimport Analytics from './Analytics'\r\nimport Transactions from './Transactions'\r\nimport WalletAddressForm from './WalletAddressForm'\r\nimport {convertedDate} from './helpers';\r\nimport {convertedValue} from './helpers';\r\nimport {welcomeText} from './helpers';\r\n// import {findLogo} from './helpers'\r\n// import {rpcURL} from '../keys';\r\n// const Web3 = require('web3');\r\n// const web3 = new Web3(rpcURL);\r\n\r\nconst user = `Anonymous`;\r\n\r\nconst BlockchainTxns = () => {\r\n    const [showERC20, setshowERC20] = useState(false);\r\n    const [showAnalytics, setAnalytics] = useState(false);\r\n    const address = useSelector(state => state.wallet.address);\r\n    const lastAddress = useSelector(state => state.wallet.lastAddress);\r\n    const walletData = useSelector(state => state.wallet.walletData);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        //*componentDidUnmount - clean up function\r\n        //   return () => {\r\n        //     effect\r\n        //   };\r\n    },[showERC20]);//componenentDidMount\r\n\r\n    const fetchWalletData = async (e, input) => {\r\n        try {\r\n            // console.log(e.target.className)\r\n            // className=\"Address-Button 0\"\r\n            //Address-Button ${index} => [\"Address-Button\", \"0\"]\r\n            const classArray = e.target.className.split(\" \");\r\n            // console.log(classArray[classArray.length - 1]);\r\n            // 0\r\n            const whaleAddressIndex = classArray[classArray.length - 1];\r\n            const whaleAddress = address[whaleAddressIndex];\r\n            let url=\"\"\r\n            switch(input){\r\n                case \"url1000\":\r\n                  url = `https://api.etherscan.io/api?module=account&action=txlist&address=${whaleAddress}&startblock=0&endblock=99999999&page=1&offset=1000&sort=desc&apikey=${process.env.REACT_APP_API_KEY}`;\r\n                  setshowERC20(false);\r\n                break;\r\n                \r\n                case \"ERC20\":\r\n                  url = `https://api.etherscan.io/api?module=account&action=tokentx&address=${whaleAddress}&startblock=0&endblock=99999999&page=1&offset=1000&sort=desc&apikey=${process.env.REACT_APP_API_KEY}`;\r\n                  if(!showAnalytics) setshowERC20(true);\r\n                break;\r\n\r\n                case \"NFTS\":\r\n                  url = `https://api.etherscan.io/api?module=account&action=tokennfttx&address=${whaleAddress}&startblock=0&endblock=999999999&page=1&offset=100&sort=desc&apikey=${process.env.REACT_APP_API_KEY}`;\r\n                  setshowERC20(false);\r\n                break;\r\n\r\n                default:\r\n                  setshowERC20(false);\r\n                break;\r\n            }\r\n            //Needs try{} catch{}\r\n            try{\r\n              const response = await fetch(url); //api call for symbol information\r\n              const walletData = await response.json();\r\n              if(walletData.message !== 'OK'){\r\n                alert(`${walletData.message} for address ${whaleAddress}.  Please try again!`);\r\n              }\r\n              else {\r\n                // header(input);\r\n                // console.log(walletData); //console.log api object\r\n                console.log(walletData);\r\n                dispatch(submit(whaleAddress, walletData));\r\n              }\r\n            }catch(err){\r\n              alert(`Error with fetching data. Please try again. ${err}`)\r\n            }\r\n            \r\n        }\r\n        catch(err) {\r\n            alert(err);\r\n        }\r\n    }\r\n    // for testing only - getting the actual date from a timestamp\r\n    // let convertedDate = (blockNumber) => {\r\n    //     let blockInfo = web3.eth.getBlock(blockNumber, async (error, block) => {\r\n    //         let timestamp = await block.timestamp;\r\n    //         let date = (timestamp * 1000);\r\n    //         date = new Date (date);\r\n    //         // console.log(`Date ${date}`)\r\n    //         // return date;\r\n    //     })\r\n    // }\r\n\r\n    const getRemoveWallet = (e, index) => {\r\n        // console.log(e.target.className)\r\n        // className=\"Address-Button 0\"\r\n        //Address-Button ${index} => [\"Address-Button\", \"0\"]\r\n        const classArray = e.target.className.split(\" \");\r\n        // console.log(classArray[classArray.length - 1]);\r\n        // 0\r\n        const whaleAddressIndex = classArray[classArray.length - 1];\r\n        const whaleAddress = address[whaleAddressIndex];\r\n        // console.log(whaleAddress);\r\n        dispatch(remove(whaleAddress));\r\n    }\r\n    \r\n    // function importAll(r) {\r\n      \r\n    //   var images = [];\r\n    //   r.keys().map((item, index) => { images[item.replace('./', '')] = r(item)//.toString().toLowerCase()\r\n    //   })\r\n    //   return images;\r\n    // }\r\n    \r\n    // const logos = importAll(require.context('../images', false, /\\.(png|jpe?g|svg)$/));\r\n\r\n    // console.log(\"logos \", logos[`eth.png`])\r\n\r\n    // const findLogo = (symbol) => {\r\n    //   let file = `${symbol.toLowerCase()}.png`;\r\n      \r\n    //   // console.log(file);\r\n    //   console.log(`file present`);\r\n    //   return <img className=\"logo\" src={logos[`eth.png`]} alt=\"\" />      \r\n    //   // return <img className=\"logo\" src={require(file)} alt=\"\" />      \r\n      \r\n    // };\r\n\r\n    const findLogo = (symbol) => {\r\n      let file = `../images/${symbol.toLowerCase()}.png`;\r\n      if(file){\r\n        console.log(`file present`);\r\n        // return <img className=\"logo\" src={file} alt=\"\" />      \r\n        return <img className=\"logo\" src={require(file).default} alt=\"\" />      \r\n      };\r\n    };\r\n\r\n    return (\r\n        <>\r\n          <div>\r\n            <div className=\"content\">\r\n              <div className=\"vertical-split\">\r\n                <div className=\"card bg-dark text-white\">\r\n                  <div className=\"card-header\">Welcome {`${user}`}</div>\r\n                  <div className=\"card-body\">\r\n                    <WalletAddressForm />\r\n                    {welcomeText}\r\n                  </div>\r\n                </div>  \r\n                <div className=\"card bg-dark text-white\">\r\n                  <div className=\"card-header\">Saved Whale Addresses</div>\r\n                  <div className=\"card-body\">\r\n                  <div className=\"address-list\"><br />\r\n                      {/* begin mapping whale wallet address list */}\r\n                      <div className=\"card-body address-list\"> {address && address.map((addressNumber, index) => {\r\n                        return <>\r\n                          <div className=\"address-list\">\r\n                            <h6 >{addressNumber}</h6>\r\n                            {/* other api call buttons and delete button */}\r\n                            <button className={`address-buttons ${index}`} onClick={(e)=>fetchWalletData(e, \"url1000\")}>Txns</button>\r\n                            <button className={`address-buttons ${index}`} onClick={(e)=>fetchWalletData(e, \"ERC20\")}>ERC20</button>\r\n                            <button className={`address-buttons ${index}`} onClick={(e)=>fetchWalletData(e, \"NFTS\")}>NFTS</button>\r\n                            <button className={`address-buttons ${index}`} onClick={(e)=>getRemoveWallet(e)}>Del</button>\r\n                          </div>\r\n                          <br />\r\n                          </>;\r\n                        })} \r\n                      </div>\r\n                      {/* end mapping whale wallet address list */}\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"vertical\">\r\n                <div className=\"card bg-dark text-white\">\r\n\r\n                {/* { showAnalytics ? <Analytics /> : <Transactions /> } */}\r\n\r\n\r\n                    <div className=\"card-header\">Data for wallet address :<span> {<span> {'\\u00A0'} {lastAddress}</span> } </span> \r\n                    { showAnalytics ? null : (showERC20 ? <HeaderERC20 /> : <Header />) }\r\n                    </div>\r\n                    {/* begin mapping walletData Blockchain Txns */}\r\n                    { showAnalytics ? <Analytics /> : null}\r\n                    <div className=\"card-body d-flex flex-column\"> {walletData && walletData.map(walletData => {\r\n                        return <>\r\n                            <div className=\"d-flex flex-row blockchain-txns\">\r\n                              <div className=\"flex-fill p-2 blockchain-txns-hash\">{`${walletData.hash}`}</div>\r\n                              {showERC20 ? <div className=\"flex-fill p-2 blockchain-txns-symbol\" >  {walletData.tokenSymbol && walletData.tokenSymbol} </div> : null}\r\n                              {/* {showERC20 ? <div className=\"flex-fill p-2 blockchain-txns-symbol\" > {findLogo(walletData.tokenSymbol)} </div> : null} */}\r\n                              {/* {walletData.tokenSymbol && walletData.tokenSymbol} */}\r\n                              {/* {findLogo(walletData.tokenSymbol)} */}\r\n                              {/* require(`../images/bat.png`) */}\r\n                              <div className=\"flex-fill p-2 blockchain-txns-blocknumber\">{`${walletData.blockNumber}`}</div>\r\n                              <div className=\"flex-fill p-2 blockchain-txns-timestamp\">{convertedDate(walletData.timeStamp)}</div>\r\n                              <div className=\"flex-fill p-2 blockchain-txns-from\">{`${walletData.from}`}</div>\r\n                              <div className=\"flex-fill p-2 blockchain-txns-to\">{`${walletData.to}`}</div>\r\n                              <div className=\"flex-fill p-2 blockchain-txns-value\">{`${convertedValue(walletData.value)}`}</div>\r\n                            </div>\r\n                          </>;\r\n                        })}\r\n                        {/* end mapping walletData Blockchain Txns */}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default BlockchainTxns;\r\n","C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\reducers\\walletReducer.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Header.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\HeaderERC20.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\WalletAddressForm.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\helpers.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\actions\\walletActions.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\actions\\types.js",[],"C:\\Users\\jtoll\\Dropbox\\DigitalCrafts\\react\\frontend-project\\crypto-whale-tracker\\src\\components\\Transactions.js",["71","72"],"\r\n\r\nimport React from 'react';\r\n\r\nconst Transactions = (props) => {\r\n\r\n  // console.log(props)\r\n\r\n  return <div className=\"d-flex flex-row blockchain-txns\">\r\n            {/* <div className=\"flex-fill p-2 blockchain-txns-hash\">{`${walletData.hash}`}</div>\r\n            {showERC20 ? <div className=\"flex-fill p-2 blockchain-txns-symbol\" >  {walletData.tokenSymbol && walletData.tokenSymbol} </div> : null} */}\r\n            {/* {showERC20 ? <div className=\"flex-fill p-2 blockchain-txns-symbol\" > {findLogo(walletData.tokenSymbol)} </div> : null} */}\r\n            {/* {walletData.tokenSymbol && walletData.tokenSymbol} */}\r\n            {/* {findLogo(walletData.tokenSymbol)} */}\r\n            {/* require(`../images/bat.png`) */}\r\n            {/* <div className=\"flex-fill p-2 blockchain-txns-blocknumber\">{`${walletData.blockNumber}`}</div>\r\n            <div className=\"flex-fill p-2 blockchain-txns-timestamp\">{convertedDate(walletData.timeStamp)}</div>\r\n            <div className=\"flex-fill p-2 blockchain-txns-from\">{`${walletData.from}`}</div>\r\n            <div className=\"flex-fill p-2 blockchain-txns-to\">{`${walletData.to}`}</div>\r\n            <div className=\"flex-fill p-2 blockchain-txns-value\">{`${convertedValue(walletData.value)}`}</div> */}\r\n          </div>\r\n      {/* end mapping walletData Blockchain Txns */}\r\n}\r\n\r\nexport default Transactions",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":11,"column":11,"nodeType":"79","messageId":"80","endLine":11,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":12,"column":11,"nodeType":"79","messageId":"80","endLine":12,"endColumn":22},{"ruleId":"77","severity":1,"message":"82","line":13,"column":11,"nodeType":"79","messageId":"80","endLine":13,"endColumn":21},{"ruleId":"77","severity":1,"message":"83","line":20,"column":11,"nodeType":"79","messageId":"80","endLine":20,"endColumn":19},{"ruleId":"77","severity":1,"message":"84","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":20},{"ruleId":"77","severity":1,"message":"85","line":24,"column":27,"nodeType":"79","messageId":"80","endLine":24,"endColumn":39},{"ruleId":"77","severity":1,"message":"86","line":136,"column":11,"nodeType":"79","messageId":"80","endLine":136,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":22,"column":7,"nodeType":"89","messageId":"90","endLine":22,"endColumn":53},{"ruleId":"91","severity":1,"message":"92","line":22,"column":7,"nodeType":"89","messageId":"93","endLine":22,"endColumn":53},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'address' is assigned a value but never used.","Identifier","unusedVar","'lastAddress' is assigned a value but never used.","'walletData' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Transactions' is defined but never used.","'setAnalytics' is assigned a value but never used.","'findLogo' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation"]